{
    "apiVersion": 1,
    "groups": [
        {
            "orgId": 1,
            "name": "Fast rules",
            "folder": "rule-folder",
            "interval": "10s",
            "rules": [
                {
                    "uid": "aee1247b-9f29-44c3-8731-56f3c675fd04",
                    "title": "Bad reset reason",
                    "condition": "B",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 86400,
                                "to": 0
                            },
                            "datasourceUid": "e22667bc-dbd4-47d2-b33f-2bf6a3c7d8e2",
                            "model": {
                                "intervalMs": 300000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"sensorRawLog\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"rst-reason\")\n  |> filter(fn: (r) => r[\"_value\"] != 1)\n  |> count()",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                0,
                                                0
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "A"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "name": "Expression",
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "B",
                                "type": "classic_conditions"
                            }
                        }
                    ],
                    "noDataState": "OK",
                    "execErrState": "OK",
                    "for": "0s",
                    "annotations": {
                        "description": "The microcontroller should not reset by any reason except for manual power switch (\"Power on\" reason). Any other reason indicates the problem with the flased code and need to be debugged with core dump.",
                        "summary": "Bad reset reason"
                    },
                    "labels": {},
                    "isPaused": false
                },
                {
                    "uid": "e4913c32-6f42-46fd-b43c-82c4500e7678",
                    "title": "Single sensor limit breached",
                    "condition": "B",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 60,
                                "to": 0
                            },
                            "datasourceUid": "e22667bc-dbd4-47d2-b33f-2bf6a3c7d8e2",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "sensors = [\"w0\", \"w1\", \"w2\", \"w3\"]\n\nfrom(bucket: \"sensorRawLog\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => contains(value: r[\"_measurement\"], set: sensors))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                50000,
                                                0
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "A"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "max"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "name": "Expression",
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "B",
                                "type": "classic_conditions"
                            }
                        }
                    ],
                    "noDataState": "OK",
                    "execErrState": "OK",
                    "for": "10s",
                    "annotations": {
                        "description": "Every single sensor in the set supports maximum load of 5 kg. Breaching this limit may lead to permament sensor damage. Replace sensors with a higher limit if this alert is triggered too often",
                        "summary": "Single sensor limit breached"
                    },
                    "isPaused": false
                }
            ]
        },
        {
            "orgId": 1,
            "name": "Slow rules",
            "folder": "rule-folder",
            "interval": "5m",
            "rules": [
                {
                    "uid": "c6aedbf3-3a5b-4dfd-a7c9-4ef00cea0739",
                    "title": "Cat isn't pooping",
                    "condition": "B",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 86400,
                                "to": 0
                            },
                            "datasourceUid": "e22667bc-dbd4-47d2-b33f-2bf6a3c7d8e2",
                            "model": {
                                "intervalMs": 1200000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"sensorRawLog\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"poo-count\")\n  |> filter(fn: (r) => r[\"_value\"] > 0)\n  |> count()\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                1,
                                                0
                                            ],
                                            "type": "lt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "A"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "max"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "name": "Expression",
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "B",
                                "type": "classic_conditions"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "5m",
                    "annotations": {
                        "summary": "We noticed that the cat haven't pooped for a long period of time"
                    },
                    "isPaused": false
                },
                {
                    "uid": "dda20658-4d98-4898-a9ab-aedf1ed065bf",
                    "title": "Cat is pooping too frequently",
                    "condition": "B",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 86400,
                                "to": 0
                            },
                            "datasourceUid": "e22667bc-dbd4-47d2-b33f-2bf6a3c7d8e2",
                            "model": {
                                "intervalMs": 300000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"sensorRawLog\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"poo-count\")\n  |> filter(fn: (r) => r[\"_value\"] > 0)\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                4,
                                                0
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "A"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "max"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "name": "Expression",
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "B",
                                "type": "classic_conditions"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "5m",
                    "annotations": {
                        "summary": "Cat is pooping too frequently"
                    },
                    "isPaused": false
                },
                {
                    "uid": "ff2217c0-499e-45b5-bfa6-63f703714fd1",
                    "title": "Sensors host is silent",
                    "condition": "B",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 300,
                                "to": 0
                            },
                            "datasourceUid": "e22667bc-dbd4-47d2-b33f-2bf6a3c7d8e2",
                            "model": {
                                "intervalMs": 60000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"sensorRawLog\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"w-sum\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)\n  |> count()",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                5,
                                                0
                                            ],
                                            "type": "lt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "A"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "name": "Expression",
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "B",
                                "type": "classic_conditions"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "5m",
                    "annotations": {
                        "description": "Usually this means that the microcontroller that collects data from sensors have frozen. Turning power off and on  should fix the issue",
                        "summary": "Sensors host is silent"
                    },
                    "labels": {},
                    "isPaused": false
                }
            ]
        }
    ]
}